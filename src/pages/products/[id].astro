---
import Layout from '../../layouts/Layout.astro';
import Navbar from '../../components/Navbar.astro';
import Footer from '../../components/Footer.astro';
import { getProductById, getCategoryById, getAllProducts } from '../../lib/firestore.js';

// Static generation - get all product IDs for static paths
export async function getStaticPaths() {
  const products = await getAllProducts();
  
  return products.map((product) => ({
    params: { id: product.id },
    props: { product }
  }));
}

const { product } = Astro.props;

// Get category information
const categoryId = product.category.split('/').pop();
const category = await getCategoryById(categoryId);

// Generate structured data for SEO
const structuredData = {
  "@context": "https://schema.org/",
  "@type": "Product",
  "name": product.name,
  "description": product.description,
  "image": product.image,
  "sku": product.serialNumber,
  "category": category?.name,
  "manufacturer": {
    "@type": "Organization",
    "name": "Swiss Trade Ventures"
  }
};
---

<Layout 
  title={`${product.name} - Medical Equipment | Swiss Trade Ventures`}
  description={`${product.description} - Professional medical equipment with serial number ${product.serialNumber}. View detailed specifications and training applications.`}
>
  <!-- Structured Data for SEO -->
  <script type="application/ld+json" set:html={JSON.stringify(structuredData)}></script>
  
  <Navbar />
  
  <!-- Breadcrumb Navigation -->
  <div class="bg-gray-50 border-b border-gray-200 pt-24 pb-4">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <nav class="flex" aria-label="Breadcrumb">
        <ol class="flex items-center space-x-4">
          <li>
            <div>
              <a href="/" class="text-gray-400 hover:text-gray-500 transition-colors duration-200">
                <svg class="flex-shrink-0 h-5 w-5" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"></path>
                </svg>
                <span class="sr-only">Home</span>
              </a>
            </div>
          </li>
          <li>
            <div class="flex items-center">
              <svg class="flex-shrink-0 h-5 w-5 text-gray-300" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
              </svg>
              <a href="/products" class="ml-4 text-sm font-medium text-gray-500 hover:text-gray-700 transition-colors duration-200">
                Products
              </a>
            </div>
          </li>
          {category && (
            <li>
              <div class="flex items-center">
                <svg class="flex-shrink-0 h-5 w-5 text-gray-300" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
                </svg>
                <span class="ml-4 text-sm font-medium text-gray-500">{category.name}</span>
              </div>
            </li>
          )}
          <li>
            <div class="flex items-center">
              <svg class="flex-shrink-0 h-5 w-5 text-gray-300" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
              </svg>
              <span class="ml-4 text-sm font-medium text-gray-900 truncate max-w-xs">{product.name}</span>
            </div>
          </li>
        </ol>
      </nav>
    </div>
  </div>

  <!-- Product Detail Content -->
  <div class="bg-white">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      
      <!-- Back to Products Link -->
      <div class="mb-8">
        <a 
          href="/products" 
          class="inline-flex items-center text-sm font-medium text-blue-600 hover:text-blue-500 transition-colors duration-200"
        >
          <svg class="mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
          </svg>
          Back to Products
        </a>
      </div>

      <!-- Product Details Grid -->
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
        
        <!-- Product Image -->
        <div class="space-y-6">
          <div class="aspect-square overflow-hidden rounded-2xl bg-gray-100">
            <img 
              src={product.image}
              alt={product.name}
              class="w-full h-full object-cover"
            />
          </div>
          
          {category && (
            <div class="flex items-center space-x-4 p-4 bg-gray-50 rounded-xl">
              <img 
                src={category.image}
                alt={category.name}
                class="w-12 h-12 object-cover rounded-lg"
              />
              <div>
                <p class="text-sm font-medium text-gray-900">Category</p>
                <p class="text-sm text-gray-600">{category.name}</p>
              </div>
            </div>
          )}
        </div>

        <!-- Product Information -->
        <div class="space-y-8">
          
          <!-- Product Header -->
          <div>
            <h1 class="text-3xl font-bold text-gray-900 mb-4" style="font-family: 'Space Grotesk', sans-serif;">
              {product.name}
            </h1>
            
            <div class="flex items-center space-x-4 mb-6">
              <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">
                Serial: {product.serialNumber}
              </span>
              {product.variations && product.variations.length > 0 && (
                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800">
                  {product.variations.length} {product.variations.length === 1 ? 'Variation' : 'Variations'}
                </span>
              )}
            </div>
            
            <p class="text-lg text-gray-600 leading-relaxed">
              {product.description}
            </p>
          </div>

          <!-- Product Variations -->
          {product.variations && product.variations.length > 0 && (
            <div class="space-y-6">
              <h2 class="text-xl font-bold text-gray-900" style="font-family: 'Space Grotesk', sans-serif;">
                Product Variations
              </h2>
              
              <div class="space-y-4">
                {product.variations.map((variation, index) => (
                  <div class="border border-gray-200 rounded-xl p-6">
                    <h3 class="text-lg font-semibold text-gray-900 mb-4">
                      {variation.name}
                    </h3>
                    
                    {variation.attributes && variation.attributes.length > 0 && (
                      <div class="grid grid-cols-2 gap-4">
                        {variation.attributes.map((attribute, attrIndex) => (
                          <div class="flex justify-between items-center py-2 border-b border-gray-100 last:border-b-0">
                            <span class="text-sm font-medium text-gray-600">
                              {attribute.title}
                            </span>
                            <span class="text-sm text-gray-900 font-medium">
                              {attribute.value}
                            </span>
                          </div>
                        ))}
                      </div>
                    )}
                  </div>
                ))}
              </div>
            </div>
          )}

          <!-- Action Buttons -->
          <div class="space-y-4">
            <button 
              class="w-full bg-blue-600 text-white px-8 py-4 rounded-xl font-semibold hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors duration-200"
              onclick="openContactModal()"
            >
              Request Information
            </button>
            
            <a 
              href="/request-catalogue"
              class="w-full inline-flex items-center justify-center px-8 py-4 border border-gray-300 rounded-xl font-semibold text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors duration-200"
            >
              Download Catalogue
            </a>
          </div>

          <!-- Additional Information -->
          <div class="bg-blue-50 rounded-xl p-6">
            <h3 class="text-lg font-semibold text-blue-900 mb-3">
              Training Applications
            </h3>
            <p class="text-blue-800 text-sm leading-relaxed">
              This medical equipment is designed for professional healthcare training environments. 
              Perfect for medical schools, nursing programs, and continuing education facilities. 
              Meets international quality standards for educational use.
            </p>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Contact Modal -->
  <div id="contactModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50 hidden">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-xl bg-white">
      <div class="mt-3">
        <div class="flex items-center justify-between mb-4">
          <h3 class="text-lg font-semibold text-gray-900">Request Information</h3>
          <button 
            onclick="closeContactModal()"
            class="text-gray-400 hover:text-gray-600 transition-colors duration-200"
          >
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>
        
        <form id="contactForm" class="space-y-4">
          <div>
            <label for="name" class="block text-sm font-medium text-gray-700 mb-1">Name</label>
            <input 
              type="text" 
              id="name" 
              name="name" 
              required
              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            >
          </div>
          
          <div>
            <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email</label>
            <input 
              type="email" 
              id="email" 
              name="email" 
              required
              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            >
          </div>
          
          <div>
            <label for="message" class="block text-sm font-medium text-gray-700 mb-1">Message</label>
            <textarea 
              id="message" 
              name="message" 
              rows="4"
              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              placeholder={`I'm interested in learning more about ${product.name}...`}
            ></textarea>
          </div>
          
          <div class="flex space-x-3 pt-4">
            <button 
              type="submit"
              class="flex-1 bg-blue-600 text-white px-4 py-2 rounded-lg font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors duration-200"
            >
              Send Message
            </button>
            <button 
              type="button"
              onclick="closeContactModal()"
              class="flex-1 bg-gray-200 text-gray-800 px-4 py-2 rounded-lg font-medium hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 transition-colors duration-200"
            >
              Cancel
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <Footer />
</Layout>

<script>
// Modal functionality
function openContactModal() {
  document.getElementById('contactModal').classList.remove('hidden');
  document.body.style.overflow = 'hidden';
}

function closeContactModal() {
  document.getElementById('contactModal').classList.add('hidden');
  document.body.style.overflow = 'auto';
}

// Form submission
document.getElementById('contactForm').addEventListener('submit', function(e) {
  e.preventDefault();
  
  // Get form data
  const formData = new FormData(this);
  const data = Object.fromEntries(formData);
  
  // Add product information
  data.product = {
    name: '{product.name}',
    serialNumber: '{product.serialNumber}',
    id: '{product.id}'
  };
  
  // Simulate form submission
  const submitBtn = this.querySelector('button[type="submit"]');
  const originalText = submitBtn.textContent;
  
  submitBtn.textContent = 'Sending...';
  submitBtn.disabled = true;
  
  setTimeout(() => {
    alert('Thank you for your inquiry! We will contact you soon.');
    closeContactModal();
    this.reset();
    submitBtn.textContent = originalText;
    submitBtn.disabled = false;
  }, 2000);
});

// Close modal on outside click
document.getElementById('contactModal').addEventListener('click', function(e) {
  if (e.target === this) {
    closeContactModal();
  }
});

// Close modal on escape key
document.addEventListener('keydown', function(e) {
  if (e.key === 'Escape') {
    closeContactModal();
  }
});
</script>

<style>
/* Ensure modal appears above everything */
#contactModal {
  z-index: 9999;
}

/* Smooth transitions */
.transition-colors {
  transition-property: color, background-color, border-color;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 200ms;
}

/* Focus states for accessibility */
button:focus,
input:focus,
textarea:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

/* Responsive image */
img {
  max-width: 100%;
  height: auto;
}

/* Print styles */
@media print {
  #contactModal {
    display: none !important;
  }
}
</style>