---
export const prerender = false;

export async function getStaticPaths() {
  return [];
}

import Layout from '../../layouts/Layout.astro';
import Navbar from '../../components/Navbar.astro';
import Footer from '../../components/Footer.astro';

// For dynamic loading, we'll handle the product fetching client-side
// This page will be a dynamic route that loads data on the client
---

<Layout 
  title="Product Details - Medical Equipment | Swiss Trade Ventures"
  description="View detailed specifications and information about our premium medical equipment products."
>
  <Navbar />
  
  <!-- Main Product Detail Content -->
  <div class="min-h-screen bg-white pt-48 lg:pt-40 pb-8">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      
      <!-- Loading State -->
      <div id="loadingState" class="text-center py-16">
        <div class="inline-flex items-center px-6 py-3 bg-blue-50 rounded-full">
          <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-blue-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="m4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
          <span class="text-blue-600 font-medium">Loading product details...</span>
        </div>
      </div>

      <!-- Product Content Container -->
      <div id="productContent" class="hidden">
        <!-- Content will be loaded dynamically -->
      </div>

      <!-- Error State -->
      <div id="errorState" class="text-center py-16 hidden">
        <div class="max-w-md mx-auto">
          <svg class="mx-auto h-16 w-16 text-gray-300 mb-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
          <h3 class="text-lg font-semibold text-gray-900 mb-2">Product not found</h3>
          <p class="text-gray-600 mb-4">The product you're looking for doesn't exist or couldn't be loaded.</p>
          <a href="/products" class="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
            Back to Products
          </a>
        </div>
      </div>
    </div>
  </div>

  <!-- Contact Modal Component -->
  <div id="contactModalContainer">
    <!-- ContactModal will be rendered here dynamically -->
  </div>

  <Footer />
</Layout>

<!-- Dynamic Loading Script -->
<script>
import { getProductById, getCategoryById, getProductsByCategory } from '../../lib/firestore.js';

// Get product ID from URL
const productId = window.location.pathname.split('/').pop();
let currentProduct = null;
let currentCategory = null;
let relatedProducts = [];

// Initialize dynamic loading
document.addEventListener('DOMContentLoaded', async function() {
  console.log('üöÄ Loading product:', productId);
  
  try {
    // Show loading state
    showLoadingState();
    
    // Fetch product data
    currentProduct = await getProductById(productId);
    console.log('üì¶ Loaded product:', currentProduct);
    
    // Fetch category data
    if (currentProduct.category) {
      currentCategory = await getCategoryById(currentProduct.category);
      console.log('üìÇ Loaded category:', currentCategory);
      
      // Fetch related products
      relatedProducts = await getProductsByCategory(currentProduct.category);
      relatedProducts = relatedProducts.filter(p => p.id !== productId).slice(0, 3);
      console.log('üîó Loaded related products:', relatedProducts.length);
    }
    
    // Render the product page
    renderProductPage();
    
    // Hide loading, show content
    hideLoadingState();
    showProductContent();
    
    // Update page title and meta
    updatePageMeta();
    
  } catch (error) {
    console.error('‚ùå Error loading product:', error);
    showErrorState();
  }
});

function showLoadingState() {
  document.getElementById('loadingState').classList.remove('hidden');
  document.getElementById('productContent').classList.add('hidden');
  document.getElementById('errorState').classList.add('hidden');
}

function hideLoadingState() {
  document.getElementById('loadingState').classList.add('hidden');
}

function showProductContent() {
  document.getElementById('productContent').classList.remove('hidden');
}

function showErrorState() {
  document.getElementById('loadingState').classList.add('hidden');
  document.getElementById('productContent').classList.add('hidden');
  document.getElementById('errorState').classList.remove('hidden');
}

function updatePageMeta() {
  if (currentProduct) {
    document.title = `${currentProduct.name} - Medical Equipment | Swiss Trade Ventures`;
    
    // Update meta description
    const metaDescription = document.querySelector('meta[name="description"]');
    if (metaDescription) {
      metaDescription.content = `${currentProduct.description} - Professional medical equipment with serial number ${currentProduct.serialNumber}. View detailed specifications and training applications.`;
    }
  }
}

function renderProductPage() {
  const productContent = document.getElementById('productContent');
  
  productContent.innerHTML = `
    <!-- Breadcrumb Navigation -->
    <nav class="mb-8" aria-label="Breadcrumb">
      <ol class="flex items-center space-x-3 text-sm">
        <li>
          <a href="/" class="text-gray-500 hover:text-gray-700 transition-colors duration-300 font-medium">
            Home
          </a>
        </li>
        <li class="flex items-center">
          <svg class="w-4 h-4 text-gray-300 mx-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
          <a href="/products" class="text-gray-500 hover:text-gray-700 transition-colors duration-300 font-medium">
            Products
          </a>
        </li>
        ${currentCategory ? `
        <li class="flex items-center">
          <svg class="w-4 h-4 text-gray-300 mx-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
          <span class="text-gray-500">${currentCategory.name}</span>
        </li>
        ` : ''}
        <li class="flex items-center">
          <svg class="w-4 h-4 text-gray-300 mx-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
          <span class="text-gray-900 font-semibold">${currentProduct.name}</span>
        </li>
      </ol>
    </nav>

    <!-- Back to Products Link -->
    <div class="mb-8">
      <a 
        href="/products" 
        class="inline-flex items-center text-sm font-medium transition-colors duration-200"
        style="color: #0003ff; hover:color: #0002e6;"
      >
        <svg class="mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
        </svg>
        Back to Products
      </a>
    </div>

    <!-- Product Details Grid -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 mb-16">
      
      <!-- Product Image -->
      <div class="space-y-6">
        <div class="aspect-square overflow-hidden rounded-2xl bg-gray-100">
          <img 
            src="${currentProduct.image}"
            alt="${currentProduct.name}"
            class="w-full h-full object-cover"
            loading="eager"
          />
        </div>
        
        ${currentCategory ? `
        <!-- Category Info Card -->
        <div class="flex items-center space-x-4 p-4 bg-gray-50 rounded-xl">
          <img 
            src="${currentCategory.image}"
            alt="${currentCategory.name}"
            class="w-12 h-12 object-cover rounded-lg"
          />
          <div>
            <p class="text-sm font-medium text-gray-900">Category</p>
            <p class="text-sm text-gray-600">${currentCategory.name}</p>
          </div>
        </div>
        ` : ''}
      </div>

      <!-- Product Information -->
      <div class="space-y-8">
        
        <!-- Product Header -->
        <div>
          <h1 class="text-3xl lg:text-4xl font-bold text-gray-900 mb-4" style="font-family: 'Space Grotesk', sans-serif;">
            ${currentProduct.name}
          </h1>
          
          <div class="flex items-center space-x-4 mb-6">
            <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-gray-100 text-gray-800">
              Serial: ${currentProduct.serialNumber}
            </span>
            ${currentProduct.variations && currentProduct.variations.length > 0 ? `
            <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">
              ${currentProduct.variations.length} ${currentProduct.variations.length === 1 ? 'Variation' : 'Variations'}
            </span>
            ` : ''}
          </div>
          
          <p class="text-lg text-gray-600 leading-relaxed">
            ${currentProduct.description}
          </p>
        </div>

        ${renderProductVariations()}

        <!-- Action Buttons -->
        <div class="space-y-4">
          <button 
            class="w-full text-white px-8 py-4 rounded-xl font-semibold focus:outline-none focus:ring-2 focus:ring-offset-2 transition-colors duration-200"
            style="background-color: #0003ff; hover:background-color: #0002e6; focus:ring-color: #0003ff;"
            onclick="openContactModal()"
          >
            Request Information
          </button>
          
          <a 
            href="/request-catalogue"
            class="w-full inline-flex items-center justify-center px-8 py-4 rounded-xl font-semibold text-gray-700 bg-white focus:outline-none focus:ring-2 focus:ring-offset-2 transition-colors duration-200"
            style="border: 1px solid #0003ff; hover:background-color: #f8f9ff; focus:ring-color: #0003ff;"
          >
            Download Catalogue
          </a>
        </div>

        <!-- Additional Information -->
        <div class="bg-blue-50 rounded-xl p-6">
          <h3 class="text-lg font-semibold text-blue-900 mb-3" style="font-family: 'Space Grotesk', sans-serif;">
            Training Applications
          </h3>
          <p class="text-blue-800 text-sm leading-relaxed">
            This medical equipment is designed for professional healthcare training environments. 
            Perfect for medical schools, nursing programs, and continuing education facilities. 
            Meets international quality standards for educational use.
          </p>
        </div>
      </div>
    </div>

    ${renderRelatedProducts()}
  `;
  
  // Add contact modal
  renderContactModal();
}

function renderProductVariations() {
  if (!currentProduct.variations || currentProduct.variations.length === 0) {
    return '';
  }
  
  const variationsHtml = currentProduct.variations.map((variation, index) => `
    <div class="rounded-xl p-6 bg-gray-50" style="border: 1px solid #0003ff;">
      <h3 class="text-lg font-semibold text-gray-900 mb-4" style="font-family: 'Space Grotesk', sans-serif;">
        ${variation.name}
      </h3>
      
      ${variation.attributes && variation.attributes.length > 0 ? `
      <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
        ${variation.attributes.map(attribute => `
        <div class="flex justify-between items-center py-3 px-4 bg-white rounded-lg">
          <span class="text-sm font-medium text-gray-600">
            ${attribute.title}
          </span>
          <span class="text-sm text-gray-900 font-semibold">
            ${attribute.value}
          </span>
        </div>
        `).join('')}
      </div>
      ` : ''}
    </div>
  `).join('');
  
  return `
    <!-- Product Variations -->
    <div class="space-y-6">
      <h2 class="text-xl font-bold mb-4" style="font-family: 'Space Grotesk', sans-serif; color: rgb(238, 159, 32);">
        Product Variations
      </h2>
      
      <div class="space-y-4">
        ${variationsHtml}
      </div>
    </div>
  `;
}

function renderRelatedProducts() {
  if (!relatedProducts || relatedProducts.length === 0) {
    return `
      <!-- Related Products Section -->
      <div class="border-t border-gray-200 pt-16">
        <div class="mb-12">
          <h2 class="text-3xl font-bold text-gray-900 mb-4" style="font-family: 'Space Grotesk', sans-serif; color: rgb(238, 159, 32);">
            More from ${currentCategory ? currentCategory.name : 'this category'}
          </h2>
          <p class="text-lg text-gray-600">
            Explore other products in this category
          </p>
        </div>
        
        <div class="text-center py-12 text-gray-500">
          <p class="text-lg">No other products available in this category yet.</p>
        </div>
      </div>
    `;
  }
  
  const relatedProductsHtml = relatedProducts.map(product => `
    <div class="bg-white rounded-2xl border border-gray-200 overflow-hidden transition-all duration-300 group" style="hover:border-color: #0003ff;">
      <div class="aspect-square w-full h-48 overflow-hidden bg-gray-50">
        <img 
          src="${product.image}"
          alt="${product.name}"
          class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-500"
          loading="lazy"
        />
      </div>
      
      <div class="p-6">
        <h3 class="text-lg font-bold text-gray-900 leading-tight mb-3" style="font-family: 'Space Grotesk', sans-serif;">
          ${product.name}
        </h3>
        
        <p class="text-sm text-gray-600 leading-relaxed mb-4">
          ${product.description}
        </p>
        
        <div class="flex items-center justify-between mb-4">
          <span class="text-xs font-medium text-gray-500 bg-gray-100 px-3 py-1 rounded-full">
            Serial: ${product.serialNumber}
          </span>
        </div>
        
        <a 
          href="/products/${product.id}"
          class="inline-flex items-center justify-center w-full px-4 py-3 text-white text-sm font-semibold rounded-xl transition-all duration-200"
          style="background-color: #0003ff; hover:background-color: #0002e6; font-family: 'Space Grotesk', sans-serif;"
        >
          View Specifications
          <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </a>
      </div>
    </div>
  `).join('');
  
  return `
    <!-- Related Products Section -->
    <div class="border-t border-gray-200 pt-16">
      <div class="mb-12">
        <h2 class="text-3xl font-bold text-gray-900 mb-4" style="font-family: 'Space Grotesk', sans-serif; color: rgb(238, 159, 32);">
          More from ${currentCategory ? currentCategory.name : 'this category'}
        </h2>
        <p class="text-lg text-gray-600">
          Explore other products in this category
        </p>
      </div>

      <!-- Related Products Grid -->
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
        ${relatedProductsHtml}
      </div>

      <!-- View All Category Products -->
      ${currentCategory ? `
      <div class="text-center mt-12">
        <a 
          href="/products#${currentCategory.name.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, '')}"
          class="inline-flex items-center px-8 py-3 text-white font-semibold rounded-xl transition-colors duration-200"
          style="background-color: #0003ff; hover:background-color: #0002e6;"
        >
          View All ${currentCategory.name}
          <svg class="ml-2 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </a>
      </div>
      ` : ''}
    </div>
  `;
}

function renderContactModal() {
  const contactModalContainer = document.getElementById('contactModalContainer');
  
  contactModalContainer.innerHTML = `
    <!-- Contact Modal -->
    <div id="contactModal" class="fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50 hidden opacity-0 pointer-events-none transition-all duration-300">
      <div class="bg-white rounded-3xl w-full max-w-lg mx-auto max-h-[90vh] overflow-y-auto transform transition-all duration-300 scale-95 opacity-0 modal-content" style="border: 2px solid #0003ff;">
        
        <!-- Modal Header -->
        <div class="flex items-center justify-between p-6 pb-4">
          <div class="flex items-center space-x-3">
            <div class="w-10 h-10 rounded-full flex items-center justify-center" style="background-color: #0003ff;">
              <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
              </svg>
            </div>
            <div>
              <h3 class="text-xl font-bold text-gray-900" style="font-family: 'Space Grotesk', sans-serif;">Get Product Information</h3>
              <p class="text-sm text-gray-500">Step <span id="currentStep">1</span> of 2</p>
            </div>
          </div>
          <button 
            onclick="closeContactModal()"
            class="text-gray-400 hover:text-gray-600 transition-colors duration-200 p-2 hover:bg-gray-100 rounded-full"
          >
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>

        <!-- Progress Bar -->
        <div class="p-6">
          <div class="w-full bg-gray-200 rounded-full h-2">
            <div id="progressBar" class="h-2 rounded-full transition-all duration-500" style="background-color: #0003ff; width: 50%;"></div>
          </div>
        </div>

        <!-- Product Info Display -->
        <div class="px-6 pb-6">
          <div class="p-4 bg-gray-50 rounded-2xl">
            <div class="flex items-center space-x-4">
              <img src="${currentProduct.image}" alt="${currentProduct.name}" class="w-16 h-16 object-cover rounded-xl">
              <div class="flex-1">
                <h4 class="font-bold text-gray-900 text-lg" style="font-family: 'Space Grotesk', sans-serif;">${currentProduct.name}</h4>
                <p class="text-sm text-gray-600">Serial: ${currentProduct.serialNumber}</p>
                ${currentCategory ? `<p class="text-xs text-gray-500 mt-1">${currentCategory.name}</p>` : ''}
              </div>
            </div>
          </div>
        </div>

        <!-- Two-Step Form -->
        <form id="contactForm" class="px-6 pb-6">
          
          <!-- Step 1: Required Information -->
          <div id="step1" class="step-content">
            <div class="mb-6">
              <h4 class="text-lg font-bold mb-2" style="color: rgb(238, 159, 32); font-family: 'Space Grotesk', sans-serif;">
                Essential Details
              </h4>
              <p class="text-sm text-gray-600 mb-6">We need these details to send you the product information</p>
            </div>
            
            <div class="space-y-5">
              <!-- Name Field -->
              <div>
                <label for="contactName" class="block text-sm font-semibold text-gray-700 mb-2">
                  Full Name <span class="text-red-500">*</span>
                </label>
                <input 
                  type="text" 
                  id="contactName" 
                  name="name" 
                  required
                  class="w-full px-4 py-4 bg-gray-50 border border-gray-200 rounded-xl focus:bg-white focus:ring-2 focus:ring-blue-500/20 focus:border-blue-300 focus:outline-none transition-all duration-300 text-gray-900 placeholder-gray-400 text-lg"
                  placeholder="Enter your full name"
                >
              </div>
              
              <!-- Email Field -->
              <div>
                <label for="contactEmail" class="block text-sm font-semibold text-gray-700 mb-2">
                  Email Address <span class="text-red-500">*</span>
                </label>
                <input 
                  type="email" 
                  id="contactEmail" 
                  name="email" 
                  required
                  class="w-full px-4 py-4 bg-gray-50 border border-gray-200 rounded-xl focus:bg-white focus:ring-2 focus:ring-blue-500/20 focus:border-blue-300 focus:outline-none transition-all duration-300 text-gray-900 placeholder-gray-400 text-lg"
                  placeholder="Enter your email address"
                >
              </div>
            </div>

            <!-- Step 1 Navigation -->
            <div class="flex justify-end mt-8">
              <button 
                type="button"
                id="nextStep"
                class="px-8 py-4 text-white font-bold rounded-xl transition-all duration-200 text-lg flex items-center space-x-2"
                style="background-color: #0003ff; hover:background-color: #0002e6; font-family: 'Space Grotesk', sans-serif;"
              >
                <span>Continue</span>
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                </svg>
              </button>
            </div>
          </div>

          <!-- Step 2: Additional Information -->
          <div id="step2" class="step-content hidden">
            <div class="mb-6">
              <h4 class="text-lg font-bold mb-2" style="color: rgb(238, 159, 32); font-family: 'Space Grotesk', sans-serif;">
                Additional Information
              </h4>
              <p class="text-sm text-gray-600 mb-6">Help us serve you better with these optional details</p>
            </div>
            
            <div class="space-y-5">
              <!-- Company Field -->
              <div>
                <label for="contactCompany" class="block text-sm font-semibold text-gray-600 mb-2">Company Name</label>
                <input 
                  type="text" 
                  id="contactCompany" 
                  name="company"
                  class="w-full px-4 py-4 bg-gray-50 border border-gray-200 rounded-xl focus:bg-white focus:ring-2 focus:ring-blue-500/20 focus:border-blue-300 focus:outline-none transition-all duration-300 text-gray-900 placeholder-gray-400"
                  placeholder="Enter your company name"
                >
              </div>
              
              <!-- Phone Field -->
              <div>
                <label for="contactPhone" class="block text-sm font-semibold text-gray-600 mb-2">Phone Number</label>
                <input 
                  type="tel" 
                  id="contactPhone" 
                  name="phone"
                  class="w-full px-4 py-4 bg-gray-50 border border-gray-200 rounded-xl focus:bg-white focus:ring-2 focus:ring-blue-500/20 focus:border-blue-300 focus:outline-none transition-all duration-300 text-gray-900 placeholder-gray-400"
                  placeholder="Enter your phone number"
                >
              </div>
              
              <!-- Country Field -->
              <div>
                <label for="contactCountry" class="block text-sm font-semibold text-gray-600 mb-2">Country</label>
                <select 
                  id="contactCountry" 
                  name="country"
                  class="w-full px-4 py-4 bg-gray-50 border border-gray-200 rounded-xl focus:bg-white focus:ring-2 focus:ring-blue-500/20 focus:border-blue-300 focus:outline-none transition-all duration-300 text-gray-900"
                >
                  <option value="">Select your country</option>
                  <option value="US">United States</option>
                  <option value="UK">United Kingdom</option>
                  <option value="CA">Canada</option>
                  <option value="AU">Australia</option>
                  <option value="DE">Germany</option>
                  <option value="FR">France</option>
                  <option value="IN">India</option>
                  <option value="SG">Singapore</option>
                  <option value="AE">United Arab Emirates</option>
                  <option value="CH">Switzerland</option>
                  <option value="JP">Japan</option>
                  <option value="KR">South Korea</option>
                  <option value="CN">China</option>
                  <option value="BR">Brazil</option>
                  <option value="MX">Mexico</option>
                  <option value="ZA">South Africa</option>
                  <option value="NG">Nigeria</option>
                  <option value="KE">Kenya</option>
                  <option value="EG">Egypt</option>
                  <option value="other">Other</option>
                </select>
              </div>
              
              <!-- Message Field -->
              <div>
                <label for="contactMessage" class="block text-sm font-semibold text-gray-600 mb-2">Message</label>
                <textarea 
                  id="contactMessage" 
                  name="message" 
                  rows="4"
                  class="w-full px-4 py-4 bg-gray-50 border border-gray-200 rounded-xl focus:bg-white focus:ring-2 focus:ring-blue-500/20 focus:border-blue-300 focus:outline-none transition-all duration-300 text-gray-900 placeholder-gray-400 resize-none"
                  placeholder="I'm interested in learning more about ${currentProduct.name}. Please provide additional information about pricing, availability, and technical specifications."
                ></textarea>
              </div>
            </div>

            <!-- Step 2 Navigation -->
            <div class="flex justify-between mt-8">
              <button 
                type="button"
                id="prevStep"
                class="px-6 py-4 text-gray-600 font-semibold rounded-xl transition-all duration-200 hover:bg-gray-100 flex items-center space-x-2"
              >
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                </svg>
                <span>Back</span>
              </button>
              
              <button 
                type="submit"
                id="submitBtn"
                class="px-8 py-4 text-white font-bold rounded-xl transition-all duration-200 text-lg flex items-center space-x-2"
                style="background-color: #0003ff; hover:background-color: #0002e6; font-family: 'Space Grotesk', sans-serif;"
              >
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
                </svg>
                <span>Send Request</span>
              </button>
            </div>
          </div>
        </form>
        
        <!-- Support Contact -->
        <div class="px-6 pb-6 pt-4 border-t border-gray-100 text-center">
          <p class="text-xs text-gray-500 mb-2">Need immediate assistance?</p>
          <a 
            href="mailto:support@swisstradeventures.com" 
            class="text-sm font-semibold transition-colors duration-300"
            style="color: #0003ff; hover:color: #0002e6;"
          >
            support@swisstradeventures.com
          </a>
        </div>
      </div>
    </div>

    <!-- Success Modal -->
    <div id="successModal" class="fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50 hidden opacity-0 pointer-events-none transition-all duration-300">
      <div class="bg-white rounded-3xl w-full max-w-md mx-auto max-h-[90vh] overflow-y-auto transform transition-all duration-300 scale-95 opacity-0 modal-content" style="border: 2px solid #0003ff;">
        <div class="text-center">
          <!-- Success Icon -->
          <div class="mx-auto flex items-center justify-center h-20 w-20 rounded-full bg-green-100 mb-6 mt-8">
            <svg class="h-8 w-8 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
            </svg>
          </div>
          
          <!-- Success Message -->
          <div class="px-8 pb-8">
            <h3 class="text-2xl font-bold text-gray-900 mb-4" style="font-family: 'Space Grotesk', sans-serif;">
              Thank You!
            </h3>
            <p class="text-gray-600 mb-6 leading-relaxed">
              Your information request has been submitted successfully. Our team will review your inquiry and contact you within 24 hours.
            </p>
            
            <!-- Contact Info -->
            <div class="bg-blue-50 rounded-2xl p-6 mb-6">
              <p class="text-sm text-gray-700 mb-3 font-semibold">For immediate assistance, contact us at:</p>
              <a 
                href="mailto:support@swisstradeventures.com" 
                class="text-lg font-bold transition-colors duration-300 block"
                style="color: #0003ff; hover:color: #0002e6;"
              >
                support@swisstradeventures.com
              </a>
            </div>
            
            <!-- Close Button -->
            <button 
              onclick="closeSuccessModal()"
              class="w-full py-4 px-6 text-white font-bold rounded-xl transition-all duration-200 text-lg"
              style="background-color: #0003ff; hover:background-color: #0002e6; font-family: 'Space Grotesk', sans-serif;"
            >
              Close
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- Already Submitted Modal -->
    <div id="alreadySubmittedModal" class="fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50 hidden opacity-0 pointer-events-none transition-all duration-300">
      <div class="bg-white rounded-3xl w-full max-w-md mx-auto max-h-[90vh] overflow-y-auto transform transition-all duration-300 scale-95 opacity-0 modal-content" style="border: 2px solid #0003ff;">
        
        <!-- Modal Header with Close Button -->
        <div class="flex items-center justify-between p-6 pb-4">
          <div class="flex items-center space-x-3">
            <div class="w-10 h-10 rounded-full flex items-center justify-center bg-blue-100">
              <svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
            </div>
            <div>
              <h3 class="text-xl font-bold text-gray-900" style="font-family: 'Space Grotesk', sans-serif;">Already Submitted</h3>
            </div>
          </div>
          <button 
            onclick="closeAlreadySubmittedModal()"
            class="text-gray-400 hover:text-gray-600 transition-colors duration-200 p-2 hover:bg-gray-100 rounded-full"
          >
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>

        <div class="text-center">
          <!-- Message -->
          <div class="px-6 pb-6">
            <h3 class="text-2xl font-bold text-gray-900 mb-4" style="font-family: 'Space Grotesk', sans-serif;">
              We've Got Your Details!
            </h3>
            <p class="text-gray-600 mb-6 leading-relaxed">
              We've already saved your information and will contact you soon. No need to submit again.
            </p>
            
            <!-- Contact Info -->
            <div class="bg-blue-50 rounded-2xl p-6 mb-6">
              <p class="text-sm text-gray-700 mb-3 font-semibold">For urgent inquiries, reach out directly:</p>
              <a 
                href="mailto:support@swisstradeventures.com" 
                class="text-lg font-bold transition-colors duration-300 block"
                style="color: #0003ff; hover:color: #0002e6;"
              >
                support@swisstradeventures.com
              </a>
            </div>
            
            <!-- Close Button -->
            <button 
              onclick="closeAlreadySubmittedModal()"
              class="w-full py-4 px-6 text-white font-bold rounded-xl transition-all duration-200 text-lg"
              style="background-color: #0003ff; hover:background-color: #0002e6; font-family: 'Space Grotesk', sans-serif;"
            >
              Got It
            </button>
          </div>
        </div>
      </div>
    </div>
  `;
  
  // Initialize the contact modal functionality
  initializeContactModal();
}

function initializeContactModal() {
  // Import Firebase functions
  import('firebase/app').then(({ initializeApp }) => {
    import('firebase/firestore').then(({ getFirestore, collection, addDoc, serverTimestamp }) => {
      
      // Firebase configuration
      const firebaseConfig = {
        apiKey: "AIzaSyADADzp8HDoX8dWs8OE2Iv_rWQT01yF8zQ",
        authDomain: "swisstradeventures-admin.firebaseapp.com",
        projectId: "swisstradeventures-admin",
        storageBucket: "swisstradeventures-admin.firebasestorage.app",
        messagingSenderId: "251484801619",
        appId: "1:251484801619:web:2b5418b63c39f7271514a6",
        measurementId: "G-M59VCMVXVN"
      };

      // Initialize Firebase
      const app = initializeApp(firebaseConfig);
      const db = getFirestore(app);

      // Cache key for localStorage
      const CACHE_KEY = 'swisstradeventures_lead_submitted';

      // Two-step form state
      let currentStep = 1;

      // Step navigation
      document.getElementById('nextStep')?.addEventListener('click', nextStep);
      document.getElementById('prevStep')?.addEventListener('click', prevStep);
      
      // Form submission
      document.getElementById('contactForm')?.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        // Get form elements
        const name = document.getElementById('contactName').value.trim();
        const email = document.getElementById('contactEmail').value.trim();
        const company = document.getElementById('contactCompany').value.trim();
        const phone = document.getElementById('contactPhone').value.trim();
        const country = document.getElementById('contactCountry').value;
        const message = document.getElementById('contactMessage').value.trim();
        
        // Validation
        if (!name || !email) {
          alert('Please fill in all required fields (Name and Email)');
          return;
        }
        
        // Email validation
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(email)) {
          alert('Please enter a valid email address');
          return;
        }
        
        const submitBtn = document.getElementById('submitBtn');
        const originalHTML = submitBtn.innerHTML;
        
        submitBtn.innerHTML = '<svg class="animate-spin w-5 h-5 mr-2" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="m4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg><span>Submitting...</span>';
        submitBtn.disabled = true;
        submitBtn.style.opacity = '0.7';
        
        try {
          // Get product information from the page
          const productId = window.location.pathname.split('/').pop() || '';
          
          // Prepare data for Firestore
          const leadData = {
            // Required fields
            name: name,
            email: email,
            
            // Optional fields
            company: company || null,
            phone: phone || null,
            country: country || null,
            message: message || null,
            
            // Product information
            product: {
              id: productId,
              name: currentProduct.name,
              serialNumber: currentProduct.serialNumber,
              category: currentCategory ? currentCategory.name : 'Medical Equipment'
            },
            
            // Metadata
            submittedAt: serverTimestamp(),
            source: 'product_detail_page',
            status: 'new',
            userAgent: navigator.userAgent,
            referrer: document.referrer || null
          };
          
          // Save to Firestore
          const docRef = await addDoc(collection(db, 'leads'), leadData);
          console.log('Lead saved with ID: ', docRef.id);
          
          // Cache submission to prevent duplicates
          localStorage.setItem(CACHE_KEY, JSON.stringify({
            submittedAt: new Date().toISOString(),
            email: email,
            leadId: docRef.id
          }));
          
          // Close contact modal and show success
          hideModal('contactModal');
          setTimeout(() => showModal('successModal'), 400);
          
          // Reset form
          resetForm();
          
        } catch (error) {
          console.error('Error saving lead:', error);
          alert('Sorry, there was an error submitting your request. Please try again or contact us directly at support@swisstradeventures.com');
        } finally {
          // Reset button state
          submitBtn.innerHTML = originalHTML;
          submitBtn.disabled = false;
          submitBtn.style.opacity = '1';
        }
      });
      
      function nextStep() {
        // Validate required fields in step 1
        const name = document.getElementById('contactName').value.trim();
        const email = document.getElementById('contactEmail').value.trim();
        
        if (!name || !email) {
          alert('Please fill in all required fields (Name and Email)');
          return;
        }
        
        // Email validation
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(email)) {
          alert('Please enter a valid email address');
          return;
        }
        
        showStep(2);
      }

      function prevStep() {
        showStep(1);
      }

      function showStep(step) {
        // Hide all steps
        document.querySelectorAll('.step-content').forEach(el => el.classList.add('hidden'));
        
        // Show current step
        document.getElementById(`step${step}`).classList.remove('hidden');
        
        // Update progress
        document.getElementById('currentStep').textContent = step;
        const progressBar = document.getElementById('progressBar');
        progressBar.style.width = step === 1 ? '50%' : '100%';
        
        currentStep = step;
      }

      function resetForm() {
        currentStep = 1;
        showStep(1);
        document.getElementById('contactForm').reset();
        
        // Auto-populate message field
        const messageField = document.getElementById('contactMessage');
        if (messageField && !messageField.value && currentProduct) {
          messageField.value = `I'm interested in learning more about ${currentProduct.name}${currentProduct.serialNumber ? ` (Serial: ${currentProduct.serialNumber})` : ''}. Please provide additional information about pricing, availability, and technical specifications.`;
        }
      }
    });
  });
}
            </div>
          </div>
        </div>
      </div>
    </div>
  `;
}

// Global functions for modal
window.openContactModal = function() {
  // Check if user has already submitted
  const CACHE_KEY = 'swisstradeventures_lead_submitted';
  const hasSubmitted = localStorage.getItem(CACHE_KEY);
  
  if (hasSubmitted) {
    showModal('alreadySubmittedModal');
  } else {
    showModal('contactModal');
    resetForm();
  }
};

window.closeContactModal = function() {
  hideModal('contactModal');
  resetForm();
};

window.closeSuccessModal = function() {
  hideModal('successModal');
};

window.closeAlreadySubmittedModal = function() {
  hideModal('alreadySubmittedModal');
};

function showModal(modalId) {
  const modal = document.getElementById(modalId);
  const content = modal.querySelector('.modal-content');
  
  modal.classList.remove('hidden', 'opacity-0');
  modal.classList.add('opacity-100');
  modal.style.pointerEvents = 'auto';
  document.body.style.overflow = 'hidden';
  
  // Animate in
  setTimeout(() => {
    content.style.transform = 'scale(1)';
    content.style.opacity = '1';
  }, 10);
}

function hideModal(modalId) {
  const modal = document.getElementById(modalId);
  const content = modal.querySelector('.modal-content');
  
  // Animate out
  content.style.transform = 'scale(0.95)';
  content.style.opacity = '0';
  modal.classList.remove('opacity-100');
  modal.classList.add('opacity-0');
  modal.style.pointerEvents = 'none';
  
  setTimeout(() => {
    modal.classList.add('hidden');
    document.body.style.overflow = 'auto';
  }, 300);
}

function resetForm() {
  const form = document.getElementById('contactForm');
  if (form) {
    form.reset();
    
    // Reset to step 1
    document.querySelectorAll('.step-content').forEach(el => el.classList.add('hidden'));
    document.getElementById('step1')?.classList.remove('hidden');
    
    // Update progress
    const currentStepEl = document.getElementById('currentStep');
    const progressBar = document.getElementById('progressBar');
    if (currentStepEl) currentStepEl.textContent = '1';
    if (progressBar) progressBar.style.width = '50%';
    
    // Auto-populate message field
    const messageField = document.getElementById('contactMessage');
    if (messageField && !messageField.value && currentProduct) {
      messageField.value = `I'm interested in learning more about ${currentProduct.name}${currentProduct.serialNumber ? ` (Serial: ${currentProduct.serialNumber})` : ''}. Please provide additional information about pricing, availability, and technical specifications.`;
    }
  }
};
</script>

<!-- Enhanced Styles -->
<style>
/* Loading animation */
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.animate-spin {
  animation: spin 1s linear infinite;
}

/* Modal animations */
.modal-content {
  transform: scale(0.95);
  opacity: 0;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Button hover effects */
button:hover, a:hover {
  transform: translateY(-1px);
}

/* Product card hover effects */
.group:hover {
  transform: translateY(-2px);
}

/* Accessibility improvements */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}
</style>